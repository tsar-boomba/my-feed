CREATE TABLE sources (
	id INTEGER PRIMARY KEY NOT NULL,
	name TEXT NOT NULL,
	url TEXT NOT NULL,
	last_pub DATETIME NOT NULL,
	last_poll DATETIME,
	ttl INTEGER,
	favorite BOOLEAN NOT NULL DEFAULT FALSE,
	created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE items (
	id INTEGER PRIMARY KEY NOT NULL,
	link TEXT NOT NULL UNIQUE,
	title TEXT,
	description TEXT,
	author TEXT,
	published DATETIME,
	source_link TEXT,
	image TEXT,
	favorite BOOLEAN NOT NULL DEFAULT FALSE,
	done BOOLEAN NOT NULL DEFAULT FALSE,
	created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	source_id INTEGER
);

CREATE TABLE tags (
	name TEXT PRIMARY KEY NOT NULL,
	background_color TEXT,
	text_color TEXT,
	border_color TEXT,
	created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE items_to_tags (
	item_id INTEGER REFERENCES items(id) ON DELETE CASCADE,
	tag_id INTEGER REFERENCES tags(name) ON DELETE CASCADE,
	created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE sources_to_tags (
	source_id INTEGER REFERENCES sources(id) ON DELETE CASCADE,
	tag_id INTEGER REFERENCES tags(name) ON DELETE CASCADE,
	created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TRIGGER update_sources
AFTER UPDATE ON sources
FOR EACH ROW
BEGIN
    UPDATE tags
    SET updated_at = CURRENT_TIMESTAMP
    WHERE name = OLD.id;
END;

CREATE TRIGGER update_items
AFTER UPDATE ON items
FOR EACH ROW
BEGIN
    UPDATE tags
    SET updated_at = CURRENT_TIMESTAMP
    WHERE name = OLD.id;
END;

CREATE TRIGGER update_tags
AFTER UPDATE ON tags
FOR EACH ROW
BEGIN
    UPDATE tags
    SET updated_at = CURRENT_TIMESTAMP
    WHERE name = OLD.name;
END;
